@using System.Diagnostics
@using System.Linq
@using NUnit.Framework
@using ProjectFood.Models
@model ProjectFood.Models.ShoppingList

@{
    ViewBag.Title = Html.DisplayFor(model => model.Title);
}

<div class="page-header nopadding-xs">
    
    <div class="col-md-8 nopadding-sides-xs">
        <h1>@Html.DisplayFor(model => model.Title) <span class="badge">@Model.Items.Count() varer</span></h1>

        <div class="text-muted">
            Brugere på listen:
            @{
                string sharedWith = "";
                foreach(var user in Model.Users) {
                    sharedWith += (user.Name ?? user.Username) + ", ";
                }
                @sharedWith.Remove(sharedWith.Length - 2)
            }
        </div>
    </div>
    <div class="col-md-4 nopadding-sides-xs">
        <div class="form-group">
            <div class="input-group">
                @using(Ajax.BeginForm("ShareList", new { id = Model.ID },
                new AjaxOptions { HttpMethod = "POST", OnSuccess = "ShareStatus" })) {
                    <label for="email">Del din indkøbsliste</label>
                    <p id="errorMessage" class="text-danger hidden"></p>
                    <div class="input-group">
                        @Html.TextBox("email", null, new { @type = "email", @class = "form-control", @placeholder = "Indtast Email", @size = "30" })
                        <div class="input-group-btn hi">
                            <button type="submit" class="btn btn-primary">Del</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div class="row hidden-xs">&nbsp;</div>
<div class="row hidden-xs">&nbsp;</div>
<div class="container-fluid nopadding hidden-xs">
    @using(Html.BeginForm("AddItem", "ShoppingLists", FormMethod.Get)) {
        <label>Tilføj vare</label>
        <div class="form-inline">
            <div class="form-group">
                @Html.TextBox("name", null, new { @class = "form-control", @placeholder = "Indtast Varenavn", @size = "30" })
            </div>
            <div class="form-group">
                @Html.TextBox("amount", null, new { @type = "number", @class = "form-control text-right", @placeholder = "Mængde" })
            </div>
            <div class="form-group">
                @Html.DropDownList("unit", new SelectList(new List<string> { "stk", "kg", "g", "liter", "ml" }), new { @class = "form-control", @placeholder = "Enhed" })
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Tilføj vare</button>
            </div>
        </div>
        <input type="hidden" name="id" value="@Model.ID" />
    }
</div>
<div class="container-fluid visible-xs nopadding-xs">
    @using(Html.BeginForm("AddItem", "ShoppingLists", FormMethod.Get)) {
        <label>Tilføj vare</label>
        <div class="form-inline">
            <div class="form-group">
                @Html.TextBox("name", null, new { @class = "form-control", @placeholder = "Indtast Varenavn", @size = "30" })
            </div>
            <div class="form-group col-xs-6 nopadding-sides-xs">
                @Html.TextBox("amount", null, new { @type = "number", @class = "form-control text-right", @placeholder = "Mængde" })
            </div>
            <div class="form-group col-xs-6 nopadding-sides-xs">
                @Html.DropDownList("unit", new SelectList(new List<string> { "stk", "kg", "g", "liter", "ml" }), new { @class = "form-control", @placeholder = "Enhed" })
            </div>
            <div class="form-group col-xs-12 nopadding-xs">
                <button type="submit" class="btn btn-primary btn-block">Tilføj vare</button>
            </div>
        </div>
        <input type="hidden" name="id" value="@Model.ID" />
    }
</div>

<br />

<div class="container-fluid nopadding">
    <div class="form-group">
        <table class="table table-striped table-hover table-responsive">
            <tr>
                <th class="col-md-1 text-center">Fjern</th>
                <th>Varenavn</th>
                <th class="col-md-1">Mængde</th>
                <th class="col-md-1">Pris</th>
                <th class="col-md-1 hidden-xs">Begynder</th>
                <th class="col-md-1 hidden-xs">Udløber</th>
                <th class="col-md-1 hidden-xs">Butik</th>
                <th class="col-md-1 hidden-xs text-center">Tilbud</th>
            </tr>
            @foreach(var item in Model.Items) {
                <tr>
                    <td>
                        <a href="@Url.Action("RemoveItem",
                             new {id = Model.ID, itemID = item.ID})"
                           class="btn btn-danger btn-xs btn-block">
                            <span class="glyphicon glyphicon-remove"></span>
                        </a>
                    </td>
                    @{
                var itemRel = ((IEnumerable<ProjectFood.Models.ShoppingList_Item>)ViewBag.ShoppingList_Item).First(x => x.ItemID == item.ID);
                string itemBought = itemRel.Bought ? "text-strikethrough text-muted" : "";
                string itemTitle = itemRel.selectedOffer == null ? item.Name : itemRel.selectedOffer.Heading;

                <td class="@itemBought"
                    style="cursor:pointer;"
                    onclick="$(this).children().submit()"
                    onmouseover="$(this).children('span#hint').removeClass('text-hide')"
                    onmouseout="$(this).children('span#hint').addClass('text-hide')">
                    @using(Ajax.BeginForm(
                    "ToggleItemBought",
                    "ShoppingLists",
                    new { id = Model.ID, itemID = item.ID },
                    new AjaxOptions { HttpMethod = "POST", OnSuccess = "ToggleBoughtStatus(this)" }
                    )) { }
                    <span id="itemTitle">@itemTitle</span>
                    <span id="hint" class="hidden-xs text-hide text-muted">
                        &nbsp;
                        <span class="glyphicon glyphicon-ok-circle"></span>
                        <span id="hintText">marker som købt</span>
                    </span>
                    <span id="hint" class="hidden-xs hidden text-hide text-muted">
                        &nbsp;
                        <span class="glyphicon glyphicon-remove-circle"></span>
                        <span id="hintText">marker som ikke købt</span>
                    </span>
                </td>

                        <td style="cursor:pointer;"
                            onclick="EditAmount('@item.Name', '@itemRel.ItemID', '@itemRel.Amount', '@itemRel.Unit')"
                            onmouseover="$(this).children().children().removeClass('text-hide')"
                            onmouseout="$(this).children().children().addClass('text-hide')">
                            <span>
                                @Html.Raw(itemRel.Amount == 0 ? "&nbsp;" : Html.Encode(itemRel.Amount.ToString() + " " + itemRel.Unit))
                                <span class="text-hide text-muted glyphicon glyphicon-pencil"></span>
                            </span>
                        </td>
                if(itemRel.selectedOffer != null) {
                        <td class="col-md-1">@itemRel.selectedOffer.Price</td>
                        <td class="hidden-xs col-md-1">@itemRel.selectedOffer.Begin.ToString("ddd d. MM")</td>
                        <td class="hidden-xs col-md-1">@itemRel.selectedOffer.End.ToString("ddd d. MM")</td>
                        <td class="hidden-xs col-md-1">@itemRel.selectedOffer.Store</td>
                } else {
                    <td></td>
                    <td class="hidden-xs" colspan="3"></td>
                }
                    }
                    <td class="hidden-xs text-center">
                        @if(item.Offers.Count > 0) {

                            <div onclick="$('tr#ShowOfferAll_@item.ID').toggle('slow')" class=" btn btn-info btn-xs btn-block">
                                <span class="glyphicon glyphicon-collapse-down"></span> <span class="badge">@item.Offers.Count()</span>
                            </div>

                        } else {
                            <span class="badge">@item.Offers.Count()</span>
                        }
                    </td>
                </tr>
                        int tmp = 0;
                        foreach(var offer in item.Offers) {
                            tmp += 1;
                            <tr style="display: none" id="ShowOfferAll_@item.ID">
                                <td>@*Should be Empty*@</td>
                                <td>@offer.Heading</td>
                                <td>@offer.Unit</td>
                                <td>@offer.Price</td>
                                <td>@offer.Begin.ToString("ddd d- M")</td>
                                <td>@offer.End.ToString("ddd d- M")</td>
                                <td>@offer.Store</td>
                                <td>
                                    <a href="@Url.Action("ChooseOffer",
                                         new {shoppingListId = Model.ID, itemId = item.ID, offerId = offer.ID })"
                                       class="btn btn-success btn-xs btn-block">
                                        Vælg
                                    </a>
                                </td>
                            </tr>
                        }
                        if(tmp % 2 == 1) {
                            <tr class="hidden">
                                <td colspan="8"></td>
                            </tr>
                        }
            }
        </table>
    </div>
</div>

<div id="EditModal" class="modal fade">
    <div class="modal-dialog" style="margin-top: 10%;">
        <div class=" modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Luk</span></button>
                <h3 id="modalTitle" class="modal-title"></h3>
            </div>
            <div id="modalBody" class="modal-body">
                <div class="container-fluid">
                    @using(Ajax.BeginForm(
                        "EditAmount",
                        new { shoppingListID = @Model.ID },
                        new AjaxOptions { HttpMethod = "POST", OnSuccess = "location.reload();" },
                        new { @id = "EditAmountForm" })) {
                        <input type="hidden" id="itemID" name="itemID" />

                        <div class="form-inline">
                            <div class="form-group">
                                <input type="number" step="0.1" class="form-control text-right" id="amount" name="amount" placeholder="Mængde" />
                            </div>
                            <div class="form-group">
                                <input type="text" class="form-control" id="unit" name="unit" placeholder="Enhed" />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Annuller</button>
                <button type="button" class="btn btn-primary" onclick="$('#EditAmountForm').submit();">Gem ændringer</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<p>
    @Html.ActionLink("Ændre navn på listen", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Ryd Liste", "ClearShoppingList", new { id = Model.ID })
</p>

@section Scripts {                          @*  Don't question the JavaScript-Gods!!!                             *@
@Scripts.Render("~/bundles/homemade")   @*  Magic part ...                                                    *@
@Scripts.Render("~/bundles/jqueryval")  @*  Magic part that makes the AJAX POST possible                      *@
}

