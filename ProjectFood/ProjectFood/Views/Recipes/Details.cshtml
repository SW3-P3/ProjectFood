@model ProjectFood.Models.Recipe

@{
    ViewBag.Title = "Details";
}

<div class="page-header nopadding-xs">
    <div class="row">
        <div class="col-md-9">
            <div class="container-fluid nopadding">
                <h1>
                    @Model.Title &nbsp;&nbsp;
                </h1>
            </div>
            <div class="container-fluid nopadding">
                <span class="text-muted">
                    Lavet af
                    @{
                        string author = ViewBag.Author == null || ViewBag.Author.Name == string.Empty ? Model.AuthorName.ToString() : ViewBag.Author.Name;
                        string tmpOriginalAuthor = ViewBag.OriginalAuthor == null || ViewBag.OriginalAuthor.Name == string.Empty ? Model.OriginalAuthorName.ToString() : ViewBag.OriginalAuthor.Name;
                        string originalAuthor = Model.OriginalAuthorName != Model.AuthorName ? "- original opskrift af " + tmpOriginalAuthor : "";

                        @author @originalAuthor
                    }
                </span>
            </div>
            <div class="container-fluid nopadding">
                <span class="lead">
                    <span class="glyphicon glyphicon-time"></span>&nbsp;&nbsp;@Model.Minutes Minutter
                </span>
            </div>
        </div>
        <div class="col-md-3">
            <div class="container-fluid nopadding text-center">
                <div class="well well-sm">
                    @if(User.Identity.IsAuthenticated) {

                        using(Ajax.BeginForm(
                        "AddRating",
                        new { id = Model.ID },
                        new AjaxOptions { HttpMethod = "POST", OnSuccess = "UpdateStarsAndAvg" },
                        new { @class = "form-group h1 nopadding", @id = "starForm" }
                        )) {
                            var rating = ViewBag.UserRating != null ? ViewBag.UserRating.Score : 0;
                            <input id="rateVal" type="hidden" name="rating" value="@((int)rating)" />


                            for(int i = 1; i <= 5; i++) {
                                string star = rating >= i ? "glyphicon-star" : "glyphicon-star-empty"; ;
                                <span id="@i" class="glyphicon @star" onmouseover="DrawStars('@i')" onmouseout="DrawStars($('#rateVal').val())" onclick="ClickedStar(@i)"></span>
                            }
                        }
                    }
                    <span class="lead">
                        <span id="avgRating">@(((decimal)ViewBag.AverageScore).ToString("0.0"))</span>
                        <span class="glyphicon glyphicon-star"></span>
                        <small> - <span id="numRatings">@ViewBag.RatingCount</span> brugere</small>
                    </span>
                </div>
            </div>

            <div class="row hidden-xs">&nbsp;</div>
            <div class="container-fluid nopadding hidden-xs">
                @if(User.Identity.IsAuthenticated == true) {
                    if(User.Identity.Name == Model.AuthorName) {

                        @Html.ActionLink("Rediger opskrift", "Edit", new { id = Model.ID, fork = false }, new { @class = "btn btn-info btn-block" })
                        @Html.ActionLink("Rediger indgredienser", "Ingredients", new { id = Model.ID }, new { @class = "btn btn-info btn-block" })
                    } else {
                        @Html.ActionLink("Lav din egen version af opskriften", "Edit", new { id = Model.ID, fork = true }, new { @class = "btn btn-info btn-block" })
                    }
                }
            </div>

            <div class="container-fluid nopadding hidden-xs">
                @if(User.Identity.Name == Model.AuthorName) {
                    <div class="row">&nbsp;</div>
                    <div onclick="$('div#deleteRecipeModal').modal('show');" class="btn btn-danger btn-block">
                        Slet opskrift
                    </div>
                    @*@Html.ActionLink("Slet opskrift", "Delete", new { id = Model.ID }, new { @class = "btn btn-danger btn-block" })*@
                    @Html.Partial("_Delete", Model);
                }

            </div>
        </div>
    </div>
</div>
<hr class="hidden-xs" />
<div class="row">
    <div class="col-md-5">
        <div class="container-fluid nopadding">
            <div class="col-md-4 col-xs-6" style="padding-left:0px;">
                @{
                    string onChange = "ChangeNumPersons(this, '" + @Model.Ingredients.Count + "')";
                    <label class="control-label">Antal personer</label>
                    @Html.TextBox("numPersons", 4, new { @type = "number", @min = "1", @max = "100", @class = "form-control", @onchange = onChange })
                }
            </div>
            <div class="col-md-8 col-xs-6" style="padding-right:0px;">
                @if(ViewBag.ShoppingLists != null && ViewBag.ShoppingLists.Count > 0) {
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    foreach(var list in ViewBag.ShoppingLists) {
                        listItems.Add(new SelectListItem { Text = list.Title, Value = list.ID.ToString() });
                    }
                    <label for="Selection"><span class="hidden-xs">Vælg </span>Indkøbsliste</label>
                    @Html.DropDownList("ListSelect", listItems, new { @id = "Selection", @class = "form-control", @onchange = "GetSelectedList()" })

                } else {
                    <label>&nbsp;</label>
                    <div onclick="$('div#createModal').modal('show'); setTimeout(function () { $('input#title').focus() }, 1000);" class="btn btn-primary btn-block">
                        Opret ny indkøbsliste
                    </div>
                    @Html.Partial("_CreateShoppingList")
                }
            </div>
        </div>
        <div class="row">&nbsp;</div>
        <div class="container-fluid nopadding">
            <table class="table table-striped" style="margin-bottom:0px;">
                <tr>
                    @if(ViewBag.ShoppingLists != null && ViewBag.ShoppingLists.Count > 0) {
                        <th class="col-md-1 col-xs-1 text-center" style="padding-left:0px;padding-right:0px;"><span id="add" style="display:none;">Tilføj</span></th>
                    }
                    <th class="col-md-2"></th>
                    <th>Ingrediens</th>
                </tr>
                @{
                    ViewBag.numItem = 0;
                    foreach(var item in Model.Ingredients) {
                        var ingredientRel = ((IEnumerable<ProjectFood.Models.Recipe_Ingredient>)ViewBag.Recipe_Ingredient)
                        .Where(x => x.IngredientID == item.ID)
                        .First();
                        <tr>

                            @if(ViewBag.ShoppingLists != null && ViewBag.ShoppingLists.Count > 0) {
                                <td class="col-md-1 col-xs-1" style="padding-left:0px;padding-right:0px;">
                                    <span id="add" style="display:none;">
                                        @using(Ajax.BeginForm(
                                        "AddItem",
                                        "ShoppingLists",
                                        new { name = item.Name, unit = ingredientRel.Unit, itemID = item.ID },
                                        new AjaxOptions { HttpMethod = "POST", OnSuccess = "ChangeToCheckRecipe" },
                                        new { @id = "AddItem_" + ViewBag.numItem })) {
                                            <input type="hidden" name="amount" id="amount_@ViewBag.numItem" value="@(ingredientRel.AmountPerPerson * 4)" />
                                            <input type="hidden" name="id" id="shoppingListId" value="@ViewBag.ShoppingLists[0].ID" />
                                            <button id="AddItem_@item.ID" type="submit" class="btn btn-info btn-xs btn-block">
                                                <span class="glyphicon glyphicon-plus"></span>
                                            </button>

                                        }
                                    </span>
                                </td>
                            }
                            <td class="col-md-1 text-right">
                                @if(ingredientRel.AmountPerPerson > 0) {
                                    <span class="hidden" id="amountPP_@ViewBag.numItem">@((ingredientRel.AmountPerPerson).ToString().Replace(",", "."))</span>
                                    <span id="amount_@ViewBag.numItem">@(ingredientRel.AmountPerPerson * 4)</span> @ingredientRel.Unit
                                }

                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        </tr>
                        ViewBag.numItem++;
                    }
                }
            </table>
            <div class="btn btn-info btn-block"
                 onclick="AddAllTheItems('@ViewBag.numItem')">
                Tilføj alle varer til valgt indkøbsliste
            </div>
            <div class="btn btn-info btn-block"
                 onclick="$('*#add').toggle();">
                Tilføj enkelte varer til valgt indkøbsliste
            </div>
        </div>
    </div>
    <div class="col-md-7">
        <div class="container-fluid nopadding">
            <h4 class="text-muted" style="margin-bottom:0px;">Instruktioner</h4>
            <div class="well">
                <span style="white-space: pre-line">@Model.Instructions</span>
            </div>
        </div>
    </div>
</div>
<hr />
<p>

    @Html.ActionLink("Tilbage til opskrifter", "Index")

</p>

@section Scripts {                          @*  Don't question the JavaScript-Gods!!!                             *@
@Scripts.Render("~/bundles/homemade")   @*  Magic part that makes the buttons change if POST was succesfull   *@
@Scripts.Render("~/bundles/jqueryval")  @*  Magic part that makes the AJAX POST possible                      *@
}
